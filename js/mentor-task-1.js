//  * –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç, —è–∫–∏–π –ø—ñ–¥—Ä–∞—Ö–æ–≤—É—î —Å—É–º—É –≤—Å—ñ—Ö –ø–∞—Ä–Ω–∏—Ö —á–∏—Å–µ–ª,
//  * —è–∫—ñ –≤—Ö–æ–¥—è—Ç—å –≤ –¥—ñ–∞–ø–∞–∑–æ–Ω —á–∏—Å–µ–ª —É –∑–º—ñ–Ω–Ω–∏—Ö –≤—ñ–¥ min –¥–æ max.
//  * –ù–∞–ø—Ä–∏–∫–ª–∞–¥, —è–∫—â–æ min=0 –∏ max=5, —Ç–æ –¥—ñ–∞–ø–∞–∑–æ–Ω 0-5, —ñ –≤ –Ω—å–æ–º—É –¥–≤–∞ –ø–∞—Ä–Ω–∏—Ö —á–∏—Å–ª–∞ - 2 —ñ 4, —ó—Ö —Å—É–º–∞ 6.
//  */

// const min = 1;
// const max = 5;
// let total = 0;

// for (let i = min; i <= max; i += 2) {
//   if (i % 2 === 0) total += i;
// }

// console.log(total);

// * –ù–∞–ø–∏—à–∏ —Ü–∏–∫–ª for, —è–∫–∏–π –≤–∏–≤–æ–¥–∏—Ç—å —É –∫–æ–Ω—Å–æ–ª—å –±—Ä–∞—É–∑–µ—Ä–∞
//  * —á–∏—Å–ª–∞ –∑–∞ –∑—Ä–æ—Å—Ç–∞–Ω–Ω—è–º –≤—ñ–¥ a –¥–æ b, –∞–ª–µ —Ç—ñ–ª—å–∫–∏ —è–∫—â–æ —á–∏—Å–ª–æ –∫—Ä–∞—Ç–Ω–µ 5.
//  */

// const a = 100;
// const b = 20;

// for (let i = a; i >= b; i -= 1) {
//   if (i % 5 === 0) {
//     console.log(i);
//   }
// }




// * –§–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è –ø–æ—Å–∏–ª–∞–Ω–Ω—è (includes —Ç–∞ –ª–æ–≥—ñ—á–Ω–µ ¬´–Ü¬ª)
//  * –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç —è–∫–∏–π –ø–µ—Ä–µ–≤—ñ—Ä—è—î —á–∏ –∑–∞–∫—ñ–Ω—á—É—î—Ç—å—Å—è –∑–Ω–∞—á–µ–Ω–Ω—è
//  * –∑–º—ñ–Ω–Ω–æ—ó link —Å–∏–º–≤–æ–ª–æ–º /. –Ø–∫—â–æ –Ω—ñ, –¥–æ–¥–∞–π –¥–æ –∫—ñ–Ω—Ü—è
//  * –∑–Ω–∞—á–µ–Ω–Ω—è link —Ü–µ–π —Å–∏–º–≤–æ–ª, –∞–ª–µ —Ç—ñ–ª—å–∫–∏ –≤ —Ç–æ–º—É –≤–∏–ø–∞–¥–∫—É,
//  * —è–∫—â–æ –≤ link —î –ø—ñ–¥—Ä—è–¥–æ–∫ "my-site".
//  * –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü—ñ—é if...else –∞–±–æ —Ç–µ—Ä–Ω–∞—Ä–Ω–∏–π –æ–ø–µ—Ä–∞—Ç–æ—Ä.
//  */

// let url = 'https://my-site.com/about';

// const isCorrectEnd = url.endsWith('/');
// const hasMySite = url.includes('my-site');

// if (!isCorrectEnd && hasMySite) {
//   url += '/';
// }

// console.log(url);



// * –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç —è–∫–∏–π –ø–µ—Ä–µ–≤—ñ—Ä—è—î —á–∏ –∑–∞–∫—ñ–Ω—á—É—î—Ç—å—Å—è –∑–Ω–∞—á–µ–Ω–Ω—è
//  *  –∑–º—ñ–Ω–Ω–æ—ó link —Å–∏–º–≤–æ–ª–æ–º /. –Ø–∫—â–æ –Ω—ñ, –¥–æ–¥–∞–π –¥–æ –∫—ñ–Ω—Ü—è
//  *  –∑–Ω–∞—á–µ–Ω–Ω—è link —Ü–µ–π —Å–∏–º–≤–æ–ª.
//  * –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü—ñ—é if...else.
//  */

// let link = 'https://my-site.com/about';
// const isCorrectLink = link.endsWith('/');

// if (!isCorrectLink) {
//   link += '/END';
// }

// console.log(link);


// * –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç, —è–∫–∏–π –ø—ñ–¥—Ä–∞—Ö–æ–≤—É—î —Å—É–º—É –≤—Å—ñ—Ö –ø–∞—Ä–Ω–∏—Ö —á–∏—Å–µ–ª,
//  * —è–∫—ñ –≤—Ö–æ–¥—è—Ç—å –≤ –¥—ñ–∞–ø–∞–∑–æ–Ω —á–∏—Å–µ–ª —É –∑–º—ñ–Ω–Ω–∏—Ö –≤—ñ–¥ min –¥–æ max.
//  * –ù–∞–ø—Ä–∏–∫–ª–∞–¥, —è–∫—â–æ min=0 –∏ max=5, —Ç–æ –¥—ñ–∞–ø–∞–∑–æ–Ω 0-5, —ñ –≤ –Ω—å–æ–º—É –¥–≤–∞ –ø–∞—Ä–Ω–∏—Ö —á–∏—Å–ª–∞ - 2 —ñ 4, —ó—Ö —Å—É–º–∞ 6.
//  */

// const min = 1;
// const max = 5;
// let total = 0;

// for (let i = min; i <= max; i += 2) {
//   if (i % 2 === 0) total += i;
// }

// console.log(total);


/**
 * –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç –¥–ª—è –æ–±—á–∏—Å–ª–µ–Ω–Ω—è –ø–ª–æ—â—ñ –ø—Ä—è–º–æ–∫—É—Ç–Ω–∏–∫–∞ –∑—ñ —Å—Ç–æ—Ä–æ–Ω–∞–º–∏,
 * –∑–Ω–∞—á–µ–Ω–Ω—è —è–∫–∏—Ö –∑–±–µ—Ä—ñ–≥–∞—é—Ç—å—Å—è —É –∑–º—ñ–Ω–Ω—ñ–π values —É –≤–∏–≥–ª—è–¥—ñ —Ä—è–¥–∫–∞.
 * –ó–Ω–∞—á–µ–Ω–Ω—è –≥–∞—Ä–∞–Ω—Ç–æ–≤–∞–Ω–æ —Ä–æ–∑–¥—ñ–ª–µ–Ω—ñ –ø—Ä–æ–±—ñ–ª–æ–º.
 */

// const values = '8 11';

// const result = values.split(' ');

// const a = Number(result[0]);
// const b = Number(result[1]);

// console.log(a * b);

/**
 * –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø–µ—Ä–µ–±–æ—Ä—É –º–∞—Å–∏–≤—É fruits.
 * –î–ª—è –∫–æ–∂–Ω–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç–∞ –º–∞—Å–∏–≤—É –≤–∏–≤–µ–¥–∏ –≤ –∫–æ–Ω—Å–æ–ª—å —Ä—è–¥–æ–∫
 * —É —Ñ–æ—Ä–º–∞—Ç—ñ –Ω–æ–º–µ—Ä_–µ–ª–µ–º–µ–Ω—Ç–∞: –∑–Ω–∞—á–µ–Ω–Ω—è_–µ–ª–µ–º–µ–Ω—Ç–∞.
 * –ù—É–º–µ—Ä–∞—Ü—ñ—è –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ –ø–æ–≤–∏–Ω–Ω–∞ –ø–æ—á–∏–Ω–∞—Ç–∏—Å—è –∑ 1.
 */

// const fruits = ['üçé', 'üçá', 'üçë', 'üçå', 'üçã'];

// for (let i = 1; i < fruits.length; i++) {
//   console.log(`${i + 1}: ${fruits[i]}`);
// }



/**
 * –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç, —è–∫–∏–π –ø—ñ–¥—Ä–∞—Ö–æ–≤—É—î —Å—É–º—É –≤—Å—ñ—Ö –ø–∞—Ä–Ω–∏—Ö —á–∏—Å–µ–ª —É –º–∞—Å–∏–≤—ñ.
 */

// const numbers = [1, 5, 8, 9, 12, 4, 15, 27, 30, 18, 14];

// function getSumOfArray(arr) {
//   let total = 0;

//   for (let num of arr) {
//     if (num % 2 === 0) {
//       total += num;
//     }
//   }

//   return total;
// }

// const result = getSumOfArray(numbers);
// console.log(result);

/**
 * –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç, —è–∫–∏–π –≤–∏–≤–æ–¥–∏—Ç—å —É –∫–æ–Ω—Å–æ–ª—å —ñ–º'—è —Ç–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–Ω–∏–π –Ω–æ–º–µ—Ä –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞.
 * –£ –∑–º—ñ–Ω–Ω–∏—Ö names —Ç–∞ phones –∑–±–µ—Ä—ñ–≥–∞—é—Ç—å—Å—è —Ä—è–¥–∫–∏ —ñ–º–µ–Ω —Ç–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–Ω–∏—Ö –Ω–æ–º–µ—Ä—ñ–≤,
 * —Ä–æ–∑–¥—ñ–ª–µ–Ω—ñ –∫–æ–º–∞–º–∏. –ü–æ—Ä—è–¥–∫–æ–≤–∏–π –Ω–æ–º–µ—Ä —ñ–º–µ–Ω —Ç–∞ —Ç–µ–ª–µ—Ñ–æ–Ω—ñ–≤ —É —Ä—è–¥–∫–∞—Ö –≤–∫–∞–∑—É—é—Ç—å –Ω–∞
 * –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω—ñ—Å—Ç—å. –ö—ñ–ª—å–∫—ñ—Å—Ç—å —ñ–º–µ–Ω —Ç–∞ —Ç–µ–ª–µ—Ñ–æ–Ω—ñ–≤ –≥–∞—Ä–∞–Ω—Ç–æ–≤–∞–Ω–æ –æ–¥–Ω–∞–∫–æ–≤–∞.
 */

// const names = 'Jacob,William,Solomon,Artemis';
// const phones = '89001234567,89001112233,890055566377,890055566300';

// const arr1 = names.split(',');
// const arr2 = phones.split(',');

// for (let i = 0; i < arr1.length; i += 1) {
//   console.log(`${arr1[i]} - ${arr2[i]}`);
// }
/**
 * –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç, —è–∫–∏–π –≤–∏–≤–æ–¥–∏—Ç—å —É –∫–æ–Ω—Å–æ–ª—å —É—Å—ñ —Å–ª–æ–≤–∞ —Ä—è–¥–∫–∞
 * –∫—Ä—ñ–º –ø–µ—Ä—à–æ–≥–æ —ñ –æ—Å—Ç–∞–Ω–Ω—å–æ–≥–æ. –†–µ–∑—É–ª—å—Ç—É—é—á–∏–π —Ä—è–¥–æ–∫ –Ω–µ –ø–æ–≤–∏–Ω–µ–Ω –ø–æ—á–∏–Ω–∞—Ç–∏—Å—è
 * –∞–±–æ –∑–∞–∫—ñ–Ω—á—É–≤–∞—Ç–∏—Å—è —Å–∏–º–≤–æ–ª –ø—Ä–æ–±—ñ–ª—É.
 * –°–∫—Ä–∏–ø—Ç –ø–æ–≤–∏–Ω–µ–Ω –ø—Ä–∞—Ü—é–≤–∞—Ç–∏ –¥–ª—è –±—É–¥—å-—è–∫–æ–≥–æ —Ä—è–¥–∫–∞.
 */

// const string = 'Welcome to the future test last word';
// const result = string.split(' ').slice(1, -1).join(' ');

// console.log(result);

// const arr = string.split(' ');

// arr.pop();
// arr.shift();

// console.log(arr.join(' '));
/**
 * –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç –ø–æ—à—É–∫—É –Ω–∞–π–º–µ–Ω—à–æ–≥–æ —á–∏—Å–ª–∞ —É –º–∞—Å–∏–≤—ñ. –ö–æ–¥ –ø–æ–≤–∏–Ω–µ–Ω –ø—Ä–∞—Ü—é–≤–∞—Ç–∏
 * –¥–ª—è –±—É–¥—å-—è–∫–æ–≥–æ –º–∞—Å–∏–≤—É —á–∏—Å–µ–ª. –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π —Ü–∏–∫–ª –¥–ª—è —Ä–æ–∑–≤'—è–∑–∞–Ω–Ω—è –∑–∞–¥–∞—á—ñ.
 */

// const values = [2, 17, 94, 1, 23, 37];
// let min = Infinity;
// console.log(min); // 1

// for (let num of values) {
//   if (num < min) {
//     min = num;
//   }
// }

// console.log(min);



/**
 * –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç, —è–∫–∏–π –¥–ª—è –æ–±'—î–∫—Ç–∞ user, –ø–æ—Å–ª—ñ–¥–æ–≤–Ω–æ:
 * - –¥–æ–¥–∞—î –ø–æ–ª–µ mood –∑—ñ –∑–Ω–∞—á–µ–Ω–Ω—è–º 'happy'
 * - –∑–∞–º—ñ–Ω—é—î –∑–Ω–∞—á–µ–Ω–Ω—è hobby –Ω–∞ 'skydiving'
 * - –∑–∞–º—ñ–Ω—é—î –∑–Ω–∞—á–µ–Ω–Ω—è premium –Ω–∞ false
 * - –≤–∏–≤–æ–¥–∏—Ç—å –≤–º—ñ—Å—Ç –æ–±'—î–∫—Ç–∞ user —É —Ñ–æ—Ä–º–∞—Ç—ñ –∫–ª—é—á:–∑–Ω–∞—á–µ–Ω–Ω—è –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—á–∏ Object.keys() —Ç–∞ for...of
 */

// const user = {
//   name: 'Mango',
//   age: 20,
//   hobby: 'html',
//   premium: true,
// };

// user.mood = 'happy';
// user.hobby = 'skydiving';
// user.premium = false;

// const arr = Object.keys(user);

// for (const key of arr) {
//   console.log(`${key}: ${user[key]}`);
// }

/**
 * –£ –Ω–∞—Å —î –æ–±'—î–∫—Ç, –¥–µ –∑–±–µ—Ä—ñ–≥–∞—é—Ç—å—Å—è –∑–∞—Ä–ø–ª–∞—Ç–∏ –Ω–∞—à–æ—ó –∫–æ–º–∞–Ω–¥–∏. –ù–∞–ø–∏—à—ñ—Ç—å –∫–æ–¥ –¥–ª—è
 * –ø—ñ–¥—Å—É–º–æ–≤—É–≤–∞–Ω–Ω—è –≤—Å—ñ—Ö –∑–∞—Ä–ø–ª–∞—Ç —ñ –∑–±–µ—Ä–µ–∂—ñ—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç —É –∑–º—ñ–Ω–Ω—ñ–π sum.
 * –ü–æ–≤–∏–Ω–Ω–æ –≤–∏–π—Ç–∏ 390. –Ø–∫—â–æ –æ–±'—î–∫—Ç salaries –ø–æ—Ä–æ–∂–Ω—ñ–π, —Ç–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –º–∞—î –±—É—Ç–∏ 0.
 */

// const salaries = {
//   John: 100,
//   Ann: 160,
//   Pete: 130,
// };

// function getTotalSalaries(myObj) {
//   let total = 0;

//   for (const salary of Object.values(myObj)) {
//     total += salary;
//   }

//   return total;
// }

// const result = getTotalSalaries(salaries);
// console.log(result);



/**
 * –ú–∞—Å–∏–≤ –æ–±'—î–∫—Ç—ñ–≤
 *
 * - –ü–µ—Ä–µ–±–æ—Ä –º–∞—Å–∏–≤–∞
 * - –ü–æ—à—É–∫ –æ–±'—î–∫—Ç–∞ –∑–∞ –∑–Ω–∞—á–µ–Ω–Ω—è–º –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ
 * - –ö–æ–ª–µ–∫—Ü—ñ—è –∑–Ω–∞—á–µ–Ω—å –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ
 */
/* 
const friends = [
  { name: 'Mango', online: false },
  { name: 'Kiwi', online: true },
  { name: 'Poly', online: false },
  { name: 'Ajax', online: false },
]; */

// console.log(friends);

// for (const friend of friends) {
//   console.log(friend.name);
// }

/**
 * –ü–æ—à—É–∫ –¥—Ä—É–≥–∞ –∑–∞ —ñ–º–µ–Ω–µ–º
 */

// const friends = [
//   { name: 'Mango', online: false, age: 10 },
//   { name: 'Kiwi', online: true, age: 20 },
//   { name: 'Poly', online: false, age: 30 },
//   { name: 'Ajax', online: false, age: 40 },
// ];

// function findFriendByName(allFriends, friendName) {
//   const box = [];

//   for (const friend of allFriends) {
//     if (friend.name === friendName) {
//       box.push(friend);
//     }
//   }

//   return box;
// }

// console.log(findFriendByName(friends, 'Poly'));
// console.log(findFriendByName(friends, "Chelsy"));

/**
 * –û—Ç—Ä–∏–º—É—î–º–æ —ñ–º–µ–Ω–∞ –≤—Å—ñ—Ö –¥—Ä—É–∑—ñ–≤
 */

// const friends = [
//   { name: 'Mango', online: false, age: 10 },
//   { name: 'Kiwi', online: true, age: 20 },
//   { name: 'Poly', online: false, age: 30 },
//   { name: 'Ajax', online: false, age: 40 },
// ];

// function getAllNames(allFriends) {
//   const names = [];

//   for (const friend of allFriends) {
//     names.push(friend.name);
//   }

//   return names;
// }

// console.log(getAllNames(friends));

/**
 * –û—Ç—Ä–∏–º—É—î–º–æ —ñ–º–µ–Ω–∞ —Ç—ñ–ª—å–∫–∏ —Ç–∏—Ö –¥—Ä—É–∑—ñ–≤, —è–∫—ñ –∑–∞—Ä–∞–∑ –æ–Ω–ª–∞–π–Ω
 */
// const friends = [
//   { name: 'Mango', online: false, age: 10 },
//   { name: 'Kiwi', online: true, age: 20 },
//   { name: 'Poly', online: false, age: 30 },
//   { name: 'Ajax', online: true, age: 40 },
// ];

// function getOnlineFriends(allFriends) {
//   const names = [];

//   for (const item of allFriends) {
//     if (item.online) {
//       names.push(item.name);
//     }
//   }

//   return names;
// }

// console.log(getOnlineFriends(friends));

// ===================

/**
 * –ù–∞–ø–∏—à—ñ—Ç—å —Ñ—É–Ω–∫—Ü—ñ—é calcTotalPrice(stones, stoneName),
 * —è–∫–∞ –ø—Ä–∏–π–º–∞—î –º–∞—Å–∏–≤ –æ–±'—î–∫—Ç—ñ–≤ —Ç–∞ —Ä—è–¥–æ–∫ –∑ –Ω–∞–∑–≤–æ—é –∫–∞–º–µ–Ω—é.
 * –§—É–Ω–∫—Ü—ñ—è —Ä–∞—Ö—É—î —ñ –ø–æ–≤–µ—Ä—Ç–∞—î –∑–∞–≥–∞–ª—å–Ω—É –≤–∞—Ä—Ç—ñ—Å—Ç—å –∫–∞–º—ñ–Ω–Ω—è –∑
 * —Ç–∞–∫–∏–º —ñ–º'—è–º, —Ü—ñ–Ω–æ—é —Ç–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—é –∑ –æ–±'—î–∫—Ç–∞
 */

// const stones = [
//   { name: 'Nike', price: 1300, quantity: 4, withDiscount: 2 },
//   { name: 'Adidas', price: 2700, quantity: 3, withDiscount: 0 },
//   { name: 'Reebok', price: 400, quantity: 7, withDiscount: 4 },
//   { name: 'NewBalance', price: 200, quantity: 2, withDiscount: 1 },
// ];

// function calcTotalPrice(stones, stoneName) {
//   for (const item of stones) {
//     if (item.name === stoneName) {
//       return item.price * (item.quantity - item.withDiscount);
//     }
//   }
// }

// console.log(calcTotalPrice(stones, 'NewBalance'));





/**
 * –ü–æ—à—É–∫ –Ω–∞–π–º–µ–Ω—à–æ—ó –∞—å–æ –Ω–∞–π–±—ñ–ª—å—à–æ—ó —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∏ (—á–∏—Å–ª–∞)
 */
// const temps = [18, 14, 12, 21, 17, 29, 24];

// Math.max(...temps);
/**
 * –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –º–∞—Å–∏–≤—É —ñ —Ç–∏–ø –∑–∞ –ø–æ—Å–∏–ª–∞–Ω–Ω—è–º
 */

// const a = [{ x: 1 }, { y: 2 }, { z: 3 }];
// const b = [...a];

// console.log(a === b);

// a[0].x = 20;

// console.log('a: ', a);
// console.log('b: ', b);

/*
 * –ü–æ—î–¥–Ω—É—î–º–æ –∫—ñ–ª—å–∫–∞ –º–∞—Å–∏–≤—ñ–≤ –≤ –æ–¥–∏–Ω —á–µ—Ä–µ–∑ spread
 */
// const lastWeekTemps = [1, 2, 3];
// const currentTemps = [4, 5, 6];
// const nextWeekTemps = [7, 8, 9];

// const allTemps = [];
// console.log(allTemps);

/*
 * –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –æ–±'—î–∫—Ç–∞
 */
// const objA = { x: 1, y: 2 };
// const objB = { x: 0, z: 3 };
// const objC = {};

// console.log(objC);

/**
 * –û–Ω–æ–≤–ª—é—î–º–æ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
 */
// const defaultSettings = {
//   theme: 'light',
//   showNotifications: true,
//   hideSidebar: false,
// };

// const userSettings = {
//   showNotifications: false,
//   hideSidebar: true,
// };

// const finalSettings = {};

// console.log(finalSettings);

// ===========================

// function foo(x, y, q, ...arr) {
//   console.log(...arr);
// }
// foo(1, 2, 3, 4, 5, 6);

// =========================

// function getTotal(...arr) {
//   let total = 0;

//   for (const item of arr) {
//     total += item;
//   }

//   return total;
// }

// const result = getTotal(1, 2, 5, 5);

// console.log(result);




/*
 * –¢–∏–ø—ñ–≤ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π –≤—Å—å–æ–≥–æ –¥–≤–∞.
 * –ú–æ–∂–Ω–∞ –ø–æ–∫–ª–∞—Å—Ç–∏ —á–∏ –∑–Ω—è—Ç–∏ –≥—Ä–æ—à—ñ –∑ —Ä–∞—Ö—É–Ω–∫—É.
 */
// const Transaction = {
//   DEPOSIT: "deposit",
//   WITHDRAW: "withdraw",
// };

/*
 * –ö–æ–∂–Ω–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—è —Ü–µ –æ–±'—î–∫—Ç —ñ–∑ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—è–º–∏: id, type —Ç–∞ amount
 */

// const account = {
  // –ü–æ—Ç–æ—á–Ω–∏–π –±–∞–ª–∞–Ω—Å —Ä–∞—Ö—É–Ω–∫—É
  // balance: 0,

  // –Ü—Å—Ç–æ—Ä—ñ—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π
  // transactions: [],

  /*
   * –ú–µ—Ç–æ–¥ —Å—Ç–≤–æ—Ä—é—î —Ç–∞ –ø–æ–≤–µ—Ä—Ç–∞—î –æ–±'—î–∫—Ç —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó.
   * –ü—Ä–∏–π–º–∞—î —Å—É–º—É —Ç–∞ —Ç–∏–ø —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó.
   */
  // createTransaction(amount, type) {},

  /*
   * –ú–µ—Ç–æ–¥, —â–æ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î –∑–∞ –¥–æ–¥–∞–≤–∞–Ω–Ω—è —Å—É–º–∏ –¥–æ –±–∞–ª–∞–Ω—Å—É.
   * –ü—Ä–∏–π–º–∞—î —Å—É–º—É —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó.
   * –í–∏–∫–ª–∏–∫–∞—î createTransaction –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –æ–±'—î–∫—Ç–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó
   * –ø—ñ—Å–ª—è —á–æ–≥–æ –¥–æ–¥–∞—î –π–æ–≥–æ –¥–æ —ñ—Å—Ç–æ—Ä—ñ—ó —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π
   */
  // deposit(amount) {},

  /*
   * –ú–µ—Ç–æ–¥, —â–æ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î –∑–∞ –∑–Ω—è—Ç—Ç—è —Å—É–º–∏ –∑ –±–∞–ª–∞–Ω—Å—É.
   * –ü—Ä–∏–π–º–∞—î —Å—É–º—É —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó.
   * –í–∏–∫–ª–∏–∫–∞—î createTransaction –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –æ–±'—î–∫—Ç–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó
   * –ø—ñ—Å–ª—è —á–æ–≥–æ –¥–æ–¥–∞—î –π–æ–≥–æ –¥–æ —ñ—Å—Ç–æ—Ä—ñ—ó —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π.
   *
   * –Ø–∫—â–æ amount –±—ñ–ª—å—à–µ –Ω—ñ–∂ –ø–æ—Ç–æ—á–Ω–∏–π –±–∞–ª–∞–Ω—Å, –≤–∏–≤–æ–¥—å –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
   * –ø—Ä–æ —Ç–µ, —â–æ –∑–Ω—è—Ç—Ç—è —Ç–∞–∫–æ—ó —Å—É–º–∏ –Ω–µ –º–æ–∂–ª–∏–≤–µ, –Ω–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ –∫–æ—à—Ç—ñ–≤.
   */
  // withdraw(amount) {},

  /*
   * –ú–µ—Ç–æ–¥ –ø–æ–≤–µ—Ä—Ç–∞—î –ø–æ—Ç–æ—á–Ω–∏–π –±–∞–ª–∞–Ω—Å
   */
  // getBalance() {},

  /*
   * –ú–µ—Ç–æ–¥ —à—É–∫–∞—î —Ç–∞ –ø–æ–≤–µ—Ä—Ç–∞—î –æ–±'—î–∫—Ç —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó –ø–æ id
   */
  // getTransactionDetails(id) {},

  /*
   * –ú–µ—Ç–æ–¥ –ø–æ–≤–µ—Ä—Ç–∞—î –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∫–æ—à—Ç—ñ–≤
   * –ø–µ–≤–Ω–æ–≥–æ —Ç–∏–ø—É —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó –∑ —É—Å—ñ—î—ó —ñ—Å—Ç–æ—Ä—ñ—ó —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π
   */
//   getTransactionTotal(type) {},
// };





/**
 * –ù–∞–ø–∏—à—ñ—Ç—å —Ñ—É–Ω–∫—Ü—ñ—é each(array, callback), —è–∫–∞ –ø–µ—Ä—à–∏–º –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º –æ—á—ñ–∫—É—î –º–∞—Å–∏–≤,
 * –∞ –¥—Ä—É–≥–∏–º - —Ñ—É–Ω–∫—Ü—ñ—é, —è–∫–∞ –∑–∞—Å—Ç–æ—Å–æ–≤—É—î—Ç—å—Å—è –¥–æ –∫–æ–∂–Ω–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç–∞ –º–∞—Å–∏–≤—É. –§—É–Ω–∫—Ü—ñ—è
 * each –ø–æ–≤–∏–Ω–Ω–∞ –ø–æ–≤–µ—Ä–Ω—É—Ç–∏ –Ω–æ–≤–∏–π –º–∞—Å–∏–≤, –µ–ª–µ–º–µ–Ω—Ç–∞–º–∏ —è–∫–æ–≥–æ –±—É–¥—É—Ç—å
 * —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏ –≤–∏–∫–ª–∏–∫—É –∫–æ–ª–ª–±–µ–∫–∞.
 */

// function each(array, onElem) {
//   const newArr = [];
//   for (const elem of array) {
//     const result = onElem(elem);
//     newArr.push(result);
//   }
//   return newArr;
// }

// console.log(
//   each([64, 49, 36, 25, 16], function (value) {
//     return value * 2;
//   }),
// );
// console.log(
//   each([64, 49, 36, 25, 16], function (value) {
//     return value - 10;
//   }),
// );
// console.log(
//   each([64, 49, 36, 25, 16], function (value) {
//     return Math.sqrt(value);
//   }),
// );

// console.log(
//   each([1.5, 2.1, 16.4, 9.7, 11.3], function (value) {
//     return Math.ceil(value);
//   }),
// );
// console.log(
//   each([1.5, 2.1, 16.4, 9.7, 11.3], function (value) {
//     return Math.floor(value);
//   }),
// );



/**
 * –ú–µ—Ç–æ–¥ forEach(callback)
 * - –ü–æ–µ–ª–µ–º–µ–Ω—Ç–æ –ø–µ—Ä–µ–±–∏—Ä–∞—î –æ—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω–∏–π –º–∞—Å–∏–≤
 * - –ù—ñ—á–æ–≥–æ –Ω–µ –ø–æ–≤–µ—Ä—Ç–∞—î
 * - –ó–∞–º—ñ–Ω—é—î –∫–ª–∞—Å–∏—á–Ω–∏–π for, —è–∫—â–æ –Ω–µ –ø–æ—Ç—Ä—ñ–±–Ω–æ –ø–µ—Ä–µ—Ä–∏–≤–∞—Ç–∏ —Ü–∏–∫–ª
 */

// const arr = [1, 2, 3, 4, 4, 5, 6, 7];

/* 
function forEach(arr, callback) {
  for (let i = 0; i < arr.length; i++) {
    callback(arr[i], i, arr);
  }
} 
*/

/* const newArr = [];

function foo(elem) {
  newArr.push(elem ** 2);
}

const numbers = [5, 10, 15, 20, 25];



console.log(newArr); */
// const result = numbers.forEach(foo);
// foo(5, 0,numbers)
// foo(10,1,numbers)
// foo(15,2,numbers)
// foo(20,3,numbers)
// foo(25,4,numbers)

// let total = 0;

// console.log(total);



/**
 * –í–∏–∫–æ–Ω–∞–π—Ç–µ —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥ –∫–æ–¥—É –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é –º–µ—Ç–æ–¥—É forEach —Ç–∞ —Å—Ç—Ä—ñ–ª–æ—á–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó.
 */
// function logItems(items) {
//   console.log(items);

//   items.forEach((item, i) => {
//     console.log(`${i + 1} - ${item}`);
//   });
// }

// logItems(['Mango', 'Poly', 'Ajax']);
// logItems(['üçé', 'üçá', 'üçë', 'üçå', 'üçã']);

/**
 * –í–∏–∫–æ–Ω–∞–π—Ç–µ —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥ –∫–æ–¥—É –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é –º–µ—Ç–æ–¥—É forEach —Ç–∞ —Å—Ç—Ä—ñ–ª–æ—á–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó.
 */
// function printContactsInfo({ names, phones }) {
//   const nameList = names.split(',');
//   const phoneList = phones.split(',');

//   nameList.forEach((item, i, array) => {
//     console.log(`${item}: ${phoneList[i]}`);
//   });
// }

// printContactsInfo({
//   names: 'Jacob,William,Solomon,Artemis',
//   phones: '89001234567,89001112233,890055566377,890055566300',
// });

/**
 * –í–∏–∫–æ–Ω–∞–π—Ç–µ —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥ –∫–æ–¥—É –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é –º–µ—Ç–æ–¥—É forEach —Ç–∞ —Å—Ç—Ä—ñ–ª–æ—á–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó.
 */

// function calculateAverage(...args) {
//   let total = 0;

//   args.forEach(item => (total += item));

//   return total / args.length;
// }

// console.log(calculateAverage(1, 2, 3, 4)); // 2.5
// console.log(calculateAverage(14, 8, 2)); // 8
// console.log(calculateAverage(27, 43, 2, 8, 36)); // 23.2





// const allCars = [
//   { make: 'Honda', model: 'CR-V', amount: 14, price: 24045 },
//   { make: 'Honda', model: 'Accord', amount: 2, price: 22455 },
//   { make: 'Mazda', model: 'Mazda 6', amount: 8, price: 24195 },
//   { make: 'Mazda', model: 'CX-9', amount: 7, price: 31520 },
//   { make: 'Toyota', model: '4Runner', amount: 19, price: 34210 },
//   { make: 'Toyota', model: 'Sequoia', amount: 16, price: 45560 },
//   { make: 'Toyota', model: 'Tacoma', amount: 4, price: 24320 },
//   { make: 'Ford', model: 'F-150', amount: 11, price: 27110 },
//   { make: 'Ford', model: 'Fusion', amount: 13, price: 22120 },
//   { make: 'Ford', model: 'Explorer', amount: 6, price: 31660 },
// ];

/**
 * –ù–µ—Ö–∞–π —Ñ—É–Ω–∫—Ü—ñ—è getModels –ø–æ–≤–µ—Ä—Ç–∞—î –º–∞—Å–∏–≤ –º–æ–¥–µ–ª–µ–π (–ø–æ–ª–µ model) –≤—Å—ñ—Ö –∞–≤—Ç–æ–º–æ–±—ñ–ª—ñ–≤.
 */

// const getModels = cars => cars.map(car => car.model);

// const getModels = cars => cars.map(car => car.model);

// console.table(getModels(allCars));

// const getUpdatedCars = cars => {
//   return cars.map(car => {
//     const obj = {
//       model: car.model,
//       price: car.price,
//     };
//     return obj;
//   });
// };

// const result = getUpdatedCars(allCars);
// console.table(result);

/**
 * –ù–µ—Ö–∞–π —Ñ—É–Ω–∫—Ü—ñ—è makeCarsWithDiscount –ø–æ–≤–µ—Ä—Ç–∞—î –Ω–æ–≤–∏–π –º–∞—Å–∏–≤ –æ–±'—î–∫—Ç—ñ–≤ —ñ–∑ –∑–º—ñ–Ω–Ω–∏–º
 * –∑–Ω–∞—á–µ–Ω–Ω—è–º –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ price –∑–∞–ª–µ–∂–Ω–æ –≤—ñ–¥ –ø–µ—Ä–µ–¥–∞–Ω–æ—ó –∑–Ω–∏–∂–∫–∏.
 */
/* 
const makeCarsWithDiscount = (cars, discount) => {
  return cars.map(car => {
    const copy = { ...car };
    copy.price *= 1 - discount;
    return copy;
  });
}; */

// console.table(makeCarsWithDiscount(allCars, 0.2));
// console.table(makeCarsWithDiscount(allCars, 0.4));

// const players = [
//   { id: 'player-1', name: 'Mango', timePlayed: 310, points: 54, online: false },
//   { id: 'player-2', name: 'Poly', timePlayed: 470, points: 92, online: true },
//   { id: 'player-3', name: 'Kiwi', timePlayed: 230, points: 48, online: true },
//   { id: 'player-4', name: 'Ajax', timePlayed: 150, points: 71, online: false },
//   { id: 'player-5', name: 'Chelsy', timePlayed: 80, points: 48, online: true },
// ];

// console.table(players);

/*
 * –ó–±—ñ–ª—å—à—É—î–º–æ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –≥–æ–¥–∏–Ω –≥—Ä–∞–≤—Ü—è –∑–∞ id
 */

// const playerIdToUpdate = 'player-3';

// const updatedPlayers = players.map(player => {
//   const copy = { ...player };
//   if (copy.id === playerIdToUpdate) {
//     copy.timePlayed += 10;
//   }
//   return copy;
// });

// console.table(updatedPlayers);

// ============================

// const obj = {
//   name: 123,
//   age: 21,
//   isAdmin: true,
// };

// const arr = [obj];

// const arr2 = [];

// arr2[0] = arr[0];

// console.log(arr);
// console.log(arr2);



/**
 * –ú–µ—Ç–æ–¥ flatMap
 */

// const tweets = [
//   { id: '000', likes: 5, tags: ['js', 'nodejs'] },
//   { id: '001', likes: 2, tags: ['html', 'css'] },
//   { id: '002', likes: 17, tags: ['html', 'js', 'nodejs'] },
//   { id: '003', likes: 8, tags: ['css', 'react'] },
//   { id: '004', likes: 0, tags: ['js', 'nodejs', 'react'] },
// ];

// const tags = [];

// tweets
//   .flatMap(item => {
//     return item.tags;
//   })
//   .forEach(item => {
//     if (!tags.includes(item)) {
//       tags.push(item);
//     }
//   });

// console.log(tags);





/**
 * –ù–∞–ø–∏—à—ñ—Ç—å –º–µ—Ç–æ–¥ calcTotalPrice(stoneName), —è–∫–∏–π –ø—Ä–∏–π–º–∞—î –Ω–∞–∑–≤—É –∫–∞–º–µ–Ω—é —ñ
 * —Ä–æ–∑—Ä–∞—Ö–æ–≤—É—î —Ç–∞ –ø–æ–≤–µ—Ä—Ç–∞—î –∑–∞–≥–∞–ª—å–Ω—É –≤–∞—Ä—Ç—ñ—Å—Ç—å –∫–∞–º–µ–Ω—ñ–≤ –∑ —Ç–∞–∫–∏–º —ñ–º'—è–º, —Ü—ñ–Ω–æ—é —Ç–∞
 * –ö—ñ–ª—å–∫—ñ—Å—Ç—å –∑ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ stones.
 */
// const chopShop = {
//   stones: [
//     { name: 'Emerald', price: 1300, quantity: 4 },
//     { name: 'Diamond', price: 2700, quantity: 3 },
//     { name: 'Sapphire', price: 1400, quantity: 7 },
//     { name: 'Ruby', price: 800, quantity: 2 },
//   ],

//   calcTotalPrice(stoneName) {
//     for (const stone of this.stones) {
//       if (stone.name === stoneName) {
//         return stone.price * stone.quantity;
//       }
//     }

    /* const stone = this.stones.find(stone => {
      return stone.name === stoneName;
    }); 
    return stone.price * stone.quantity;
    */
//   },
// };

// console.log(chopShop.calcTotalPrice('Diamond'));
// console.log(chopShop.calcTotalPrice('Ruby'));




/**
 * –ù–∞–ø–∏—à–∏ –∫–ª–∞—Å Blogger –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –æ–±'—î–∫—Ç–∞ –±–ª–æ–≥–µ—Ä–∞ –∑ –Ω–∞—Å—Ç—É–ø–Ω–∏–º–∏ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—è–º–∏:
 *  - email - –ø–æ—à—Ç–∞, —Ä—è–¥–æ–∫
 * - age - –≤—ñ–∫, —á–∏—Å–ª–æ
 * - numberOfPosts - –∫—ñ–ª—å–∫—ñ—Å—Ç—å –ø–æ—Å—Ç—ñ–≤, —á–∏—Å–ª–æ
 * - topics - –º–∞—Å–∏–≤ —Ç–µ–º –Ω–∞ —è–∫–∏—Ö —Å–ø–µ—Ü—ñ–∞–ª—ñ–∑—É—î—Ç—å—Å—è –±–ª–æ–≥–µ—Ä
 *
 * –ö–ª–∞—Å —á–µ–∫–∞—î –æ–¥–∏–Ω –ø–∞—Ä–∞–º–µ—Ç—Ä - –æ–±'—î–∫—Ç –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å –∑ –æ–¥–Ω–æ–π–º–µ–Ω–Ω–∏–º–∏ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—è–º–∏.
 *
 * - –î–æ–¥–∞–π –º–µ—Ç–æ–¥ getInfo(), —è–∫–∏–π, –ø–æ–≤–µ—Ä—Ç–∞—î —Ä—è–¥–æ–∫: User ${email} is ${age} years old and has ${numPosts} posts.
 * - –î–æ–¥–∞–π –º–µ—Ç–æ–¥ updatePostCount(value), —è–∫–∏–π —É –ø–∞—Ä–∞–º–µ—Ç—Ä—ñ value –ø—Ä–∏–π–º–∞—î –∫—ñ–ª—å–∫—ñ—Å—Ç—å –ø–æ—Å—Ç—ñ–≤, —è–∫—ñ –ø–æ—Ç—Ä—ñ–±–Ω–æ –¥–æ–¥–∞—Ç–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–≤—ñ.
 */

// class Blogger {
//   constructor({ name, age, numberOfPosts, topics }) {
//     this.email = name;
//     this.age = age;
//     this.numberOfPosts = numberOfPosts;
//     this.topics = topics;
//   }

//   getInfo() {
//     return `User ${this.email} is ${this.age} years old and has ${this.numberOfPosts} posts.`;
//   }

//   updatePostCount(value) {
//     this.numberOfPosts += value;
//   }
// }

// const mango = new Blogger({
//   name: 'mango@mail.com',
//   age: 24,
//   numberOfPosts: 20,
//   topics: ['tech', 'cooking'],
// });
// console.log(mango.getInfo()); // User mango@mail.com is 24 years old and has 20 posts
// mango.updatePostCount(5);
// console.log(mango.getInfo()); // User mango@mail.com is 24 years old and has 25 posts

// const poly = new Blogger({
//   name: 'poly@mail.com',
//   age: 19,
//   numberOfPosts: 17,
//   topics: ['sports', 'gaming', 'health'],
// });
// console.log(poly.getInfo()); // User poly@mail.com is 19 years old and has 17 posts
// poly.updatePostCount(4);
// console.log(poly.getInfo()); // User poly@mail.com is 19 years old and has 21 posts




/**
 * –ù–∞–ø–∏—à–∏ –∫–ª–∞—Å User —è–∫–∏–π —Å—Ç–≤–æ—Ä—é—î –æ–±'—î–∫—Ç —ñ–∑ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—è–º–∏ login —Ç–∞ email.
 * –û–≥–æ–ª–æ—Å–∏ –ø—Ä–∏–≤–∞—Ç–Ω—ñ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ #login —Ç–∞ #email, –¥–æ—Å—Ç—É–ø –¥–æ —è–∫–∏—Ö –∑—Ä–æ–±–∏ —á–µ—Ä–µ–∑
 * –≥–µ—Ç–µ—Ä —Ç–∞ —Å–µ—Ç–µ—Ä login —Ç–∞ email.
 */
// class User {
//   #login;
//   #email;

//   constructor({ login, email }) {
//     this.#email = email;
//     this.#login = login;
//   }

//   get login() {
//     return this.#login;
//   }
//   set login(login) {
//     this.#login = login;
//   }

//   get email() {
//     return this.#email;
//   }
//   set email(email) {
//     this.#email = email;
//   }
// }

// console.dir(User);

// const mango = new User({
//   login: 'Mango',
//   email: 'mango@dog.woof',
// });

// console.log(mango.login); // Mango
// mango.login = 'Mangodoge';
// console.log(mango.login); // Mangodoge

// const poly = new User({
//   login: 'Poly',
//   email: 'poly@mail.com',
// });

// console.log(poly.login); // Poly
// poly.login = 'Polycutie';
// console.log(poly.login); // Polycutie





/**
 * –ù–∞–ø–∏—à–∏ –∫–ª–∞—Å Storage —è–∫–∏–π —Å—Ç–≤–æ—Ä—é—î –æ–±'—î–∫—Ç–∏ –¥–ª—è –∫–µ—Ä—É–≤–∞–Ω–Ω—è —Å–∫–ª–∞–¥–æ–º —Ç–æ–≤–∞—Ä—ñ–≤.
 * –ü—Ä–∏ –≤–∏–∫–ª–∏–∫—É –æ—Ç—Ä–∏–º—É–≤–∞—Ç–∏–º–µ –æ–¥–∏–Ω –∞—Ä–≥—É–º–µ–Ω—Ç - –ø–æ—á–∞—Ç–∫–æ–≤–∏–π –º–∞—Å–∏–≤ —Ç–æ–≤–∞—Ä—ñ–≤ —ñ
 * –∑–∞–ø–∏—Å—É–≤–∞—Ç–∏–º–µ –π–æ–≥–æ –≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å items.
 *
 * –î–æ–¥–∞–π –º–µ—Ç–æ–¥–∏ –∫–ª–∞—Å—É:
 * - getItems() - –ø–æ–≤–µ—Ä—Ç–∞—î –º–∞—Å–∏–≤ —Ç–æ–≤–∞—Ä—ñ–≤.
 * - addItem(item) - –æ—Ç—Ä–∏–º—É—î –Ω–æ–≤–∏–π —Ç–æ–≤–∞—Ä —ñ –¥–æ–¥–∞—î –π–æ–≥–æ –¥–æ –ø–æ—Ç–æ—á–Ω–∏—Ö.
 * - removeItem(item) - –æ—Ç—Ä–∏–º—É—î —Ç–æ–≤–∞—Ä —ñ, —è–∫—â–æ –≤—ñ–Ω —î, –≤–∏–¥–∞–ª—è—î –π–æ–≥–æ –∑ –ø–æ—Ç–æ—á–Ω–∏—Ö.
 */
// const storage = new Storage(['üçé', 'üçã', 'üçá', 'üçë']);

// const items = storage.getItems();
// console.table(items); // [ 'üçé', 'üçã', 'üçá', 'üçë' ]

// storage.addItem('üçå');
// console.table(storage.items); // [ 'üçé', 'üçã', 'üçá', 'üçë', 'üçå' ]

// storage.removeItem('üçã');
// console.table(storage.items); // [ 'üçé', 'üçá', 'üçë', 'üçå' ]




